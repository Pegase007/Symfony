<?php

namespace TroisWA\BackBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints\DateTime;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Product
 *
 *
 * @ORM\Table(name="product")
 * @ORM\Entity(repositoryClass="TroisWA\BackBundle\Repository\ProductRepository")
 */
class Product
{
    /**
     * @var integer
     *
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @Assert\Length(
     *    min = 2,
     *    minMessage = "Your first name must be at least {{ limit }} characters long",
     *)
     * @Assert\NotBlank() (message="Must not be empty")
     * @ORM\Column(name="title", type="string", length=100)
     */
    private $title;

    /**
     * @var string
     *
     * * @Assert\Length(
     *      max = 500,
     *      maxMessage = "Your first name cannot be longer than {{ limit }} characters",
     *
     * )
     *
     * @ORM\Column(name="description", type="text",nullable=true)
     */
    private $description;

    /**
     * @var float
     *
     * @Assert\Regex(
     *     pattern="/^[0-9]{1,}(.)?[0-9]{1,2}$/",
     *     message="The value {{ value }} is not a valid price."
     * )
     *
     * @Assert\NotBlank() (message="Must not be empty")
     * @ORM\Column(name="price", type="float")
     */
    private $price;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="date_created", type="datetime")
     */
    private $dateCreated;


    /**
     * @var integer
     * @Assert\Type(
     *     type="integer",
     *     message="The value {{ value }} is not a valid {{ type }}."
     * )
     *
     * @Assert\NotBlank() (message="Must not be empty")
     *
     * @ORM\Column(name="quantity", type="integer",options={"default"=1})
     */

    private $quantity;

    /**
     * @var text
     *
     * @Assert\Regex(
     *     pattern="/^(REF-)[0-9]{1,}$/",
     *     message="The value {{ value }} is not a valid reference."
     * )
     *
     * @Assert\NotBlank() (message="Must not be empty")
     * @ORM\Column(name="reference", type="text")
     */
    private $reference;

    /**
     * @var boolean
     *
     * @ORM\Column(name="activate", type="boolean")
     */
    private $activate;


    /**
     * @ORM\ManyToOne(targetEntity="Category")
     * @ORM\JoinColumn(name="category_id", referencedColumnName="id", onDelete="SET NULL")
     * @Assert\NotBlank() (message="Must not be empty")
     */
    private $category;

    /**
     * @ORM\ManyToOne(targetEntity="Brand")
     * @ORM\JoinColumn(name="brand_id",referencedColumnName="id", nullable=false)
     * @Assert\NotBlank() (message="Must not be empty")
     *
     */
    private $brand;

    /**
     * @ORM\OneToMany(targetEntity="Comments", mappedBy="product")
     */
    private $comments;

}






